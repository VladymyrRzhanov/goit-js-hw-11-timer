{"version":3,"sources":["countdown.js","index.js"],"names":["makeCountdown","selector","htmlTimer","CountdownTimer","targetDate","creatCountdown","getTime","start","startTime","Date","now","targetTime","callTimer","setInterval","currentTime","deltaTime","timerTime","time","getTimeComponents","timerInterface","chooseSelectors","days","pad","Math","floor","hours","mins","secs","value","String","padStart","newSelector","slice","length","document","body","insertAdjacentHTML","refs","daysValue","querySelector","hoursValue","minsValue","secsValue","textContent","newTimer"],"mappings":";AAwBC,aAxBc,SAASA,EAAcC,GAuB3BC,MAtBqCD,0BAAAA,OAAAA,EAA5C,wjBAuBH,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACuDD,aA9EA,IAAA,EAAA,EAAA,QAAA,gBA8EA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5EME,IAAAA,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,WAAYH,EAAAA,EAAAA,SAAY,EAAA,KAAA,GAC7BA,KAAAA,SAAWA,EAChBI,EAAe,KAAKJ,UACfG,KAAAA,WAAaA,EAAWE,UACxBC,KAAAA,QAuEb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QApEI,MAAA,WAAQ,IAAA,EAAA,KACEC,EAAYC,KAAKC,MACjBC,EAAa,KAAKP,WAAaI,EAChCI,KAAAA,UAAUD,GACfE,YAAY,WACFC,IAAAA,EAAcL,KAAKC,MAEnBK,EAAYJ,GADAG,EAAcN,GAEhC,EAAKI,UAAUG,IACjB,OA2DV,CAAA,IAAA,YAxDI,MAAA,SAAUC,GACAC,IAAAA,EAAO,KAAKC,kBAAkBF,GAEpCG,EADaC,EAAgB,KAAKnB,UACdgB,KAqD5B,CAAA,IAAA,oBAlDI,MAAA,SAAkBA,GAKP,MAAA,CAAEI,KAJI,KAAKC,IAAIC,KAAKC,MAAMP,EAAQ,QAI1BQ,MAHD,KAAKH,IAAIC,KAAKC,MAAOP,EAAQ,MAAyB,OAG9CS,KAFT,KAAKJ,IAAIC,KAAKC,MAAOP,EAAQ,KAAoB,MAElCU,KADf,KAAKL,IAAIC,KAAKC,MAAOP,EAAQ,IAAc,SA8ChE,CAAA,IAAA,MA1CI,MAAA,SAAIW,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAyCzC,EA5EM3B,GAwCN,SAASE,EAAeJ,GACd8B,IAAAA,EAAc9B,EAAS+B,MAAM,EAAG,CAAC/B,EAASgC,SAC5CC,SAASC,KAAKC,mBAAmB,cAAc,EAAcL,EAAAA,SAAAA,IAGrE,SAASX,EAAgBnB,GAQdoC,MAPM,CACTC,UAAWJ,SAASK,cAAiBtC,GAAAA,OAAAA,EAD5B,yBAETuC,WAAYN,SAASK,cAAiBtC,GAAAA,OAAAA,EAF7B,0BAGTwC,UAAWP,SAASK,cAAiBtC,GAAAA,OAAAA,EAH5B,yBAITyC,UAAWR,SAASK,cAAiBtC,GAAAA,OAAAA,EAA1B,0BAMnB,SAASkB,EAAuF,EAAA,GAAvEmB,IAAAA,EAAAA,EAAAA,UAAUE,EAAAA,EAAAA,WAAWC,EAAAA,EAAAA,UAAUC,EAAAA,EAAAA,UAAarB,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACpFW,EAAUK,YAActB,EACxBmB,EAAWG,YAAclB,EACzBgB,EAAUE,YAAcjB,EACxBgB,EAAUC,YAAchB,EAG5B,IAAMiB,EAAW,IAAIzC,EAAe,CAClCF,SAAU,WACVG,WAAY,IAAIK,KAAK","file":"src.1839e118.js","sourceRoot":"..\\src","sourcesContent":["export default function makeCountdown(selector) {\r\n    const htmlTimer = `<div class=\"timer\" id=\"${selector}\">\r\n    <div class=\"field\">\r\n        <span class=\"value\" data-value=\"days\">11</span>\r\n        <span class=\"label\">Days</span>\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <span class=\"value\" data-value=\"hours\">11</span>\r\n        <span class=\"label\">Hours</span>\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <span class=\"value\" data-value=\"mins\">11</span>\r\n        <span class=\"label\">Minutes</span>\r\n    </div>\r\n\r\n    <div class=\"field\">\r\n        <span class=\"value\" data-value=\"secs\">11</span>\r\n        <span class=\"label\">Seconds</span>\r\n    </div>\r\n</div>`;\r\n    // console.log(htmlTimer)\r\n    return htmlTimer;\r\n}","// import countdownTimerTpl from \"./templates/countdown-timer.hbs\";\r\nimport makeCountdown from \"./countdown\";\r\n\r\nclass CountdownTimer {\r\n    constructor({ targetDate, selector }) {\r\n        this.selector = selector;\r\n        creatCountdown(this.selector);\r\n        this.targetDate = targetDate.getTime();\r\n        this.start();\r\n    };\r\n    \r\n    start() {\r\n        const startTime = Date.now();\r\n        const targetTime = this.targetDate - startTime;\r\n        this.callTimer(targetTime);\r\n        setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const difInTime = currentTime - startTime;\r\n            const deltaTime = targetTime - difInTime;\r\n            this.callTimer(deltaTime);\r\n        },1000);\r\n    };\r\n\r\n    callTimer(timerTime) {\r\n        const time = this.getTimeComponents(timerTime);\r\n        const refs = chooseSelectors(this.selector);\r\n        timerInterface(refs,time);\r\n    };\r\n\r\n    getTimeComponents(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n        return { days, hours, mins, secs };\r\n    };\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    };\r\n\r\n};\r\n\r\nfunction creatCountdown(selector) {\r\n    const newSelector = selector.slice(1, [selector.length]);\r\n        document.body.insertAdjacentHTML('afterbegin', makeCountdown(newSelector));\r\n};\r\n\r\nfunction chooseSelectors(selector) {\r\n    const refs = {\r\n        daysValue: document.querySelector(`${selector} [data-value=\"days\"]`),\r\n        hoursValue: document.querySelector(`${selector} [data-value=\"hours\"]`),\r\n        minsValue: document.querySelector(`${selector} [data-value=\"mins\"]`),\r\n        secsValue: document.querySelector(`${selector} [data-value=\"secs\"]`),\r\n    };\r\n        \r\n    return refs;\r\n};\r\n\r\nfunction timerInterface({daysValue,hoursValue,minsValue,secsValue},{ days, hours, mins, secs }) {\r\n    daysValue.textContent = days;\r\n    hoursValue.textContent = hours;\r\n    minsValue.textContent = mins;\r\n    secsValue.textContent = secs;\r\n};\r\n\r\nconst newTimer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Sep 17, 2021'),\r\n});\r\n\r\n// const newTimer2 = new CountdownTimer({\r\n//   selector: '#timer-2',\r\n//   targetDate: new Date('Jun 17, 2021'),\r\n// });\r\n\r\n// const newTimer3 = new CountdownTimer({\r\n//   selector: '#timer-3',\r\n//   targetDate: new Date('Jul 17, 2021'),\r\n// });"]}